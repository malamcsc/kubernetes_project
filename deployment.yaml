apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "flask"
  namespace: "default"
  labels:
    app: "flask"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "flask"
  template:
    metadata:
      labels:
        app: "flask"
    spec:
      serviceAccountName : ksa-cloud-sql
      containers:
      - name: "flask"
        image: "gcr.io/kubernetes-project-378913/flask_imagev3:green"
        env:
        - name: PORT
          value: "8080"
        - name: INSTANCE_HOST
          value: "10.42.240.3"
        - name: DB_PORT
          value: "5432"  
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: gke-cloud-sql-secrets
              key: username
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: gke-cloud-sql-secrets
              key: password
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: gke-cloud-sql-secrets
              key: database
      - name: cloud-sql-proxy
        # This uses the latest version of the Cloud SQL proxy
        # It is recommended to use a specific version for production environments.
        # See: https://github.com/GoogleCloudPlatform/cloudsql-proxy 
        image: gcr.io/cloudsql-docker/gce-proxy:latest
        command:
          - "/cloud_sql_proxy"

          # If connecting from a VPC-native GKE cluster, you can use the
          # following flag to have the proxy connect over private IP
          # - "-ip_address_types=PRIVATE"

          # tcp should be set to the port the proxy should listen on
          # and should match the DB_PORT value set above.
          # Defaults: MySQL: 3306, Postgres: 5432, SQLServer: 1433
          - "-instances=kubernetes-project-378913:us-central1:flaskdb=tcp:5432"
        securityContext:
          # The default Cloud SQL proxy image runs as the
          # "nonroot" user and group (uid: 65532) by default.
          runAsNonRoot: true


---
apiVersion: "v1"
kind: "Service"
metadata:
  name: "flask-service"
  namespace: "default"
  labels:
    app: "flask"
spec:
  ports:
  - protocol: "TCP"
    port: 80
    targetPort: 5000
  selector:
    app: "flask"
  type: "LoadBalancer"
  loadBalancerIP: ""


